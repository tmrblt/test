- name: Report updates for Windows WMs
  hosts: all
  gather_facts: true
  vars:
    check_updates: true
    reboot_required: false
    update_list: []
  tasks:
#    - debug: var=ansible_facts

    - name: Check for updates 
      win_updates:
        category_names:
          - SecurityUpdates
          - CriticalUpdates
          - UpdateRollups
        state: searched
        log_path: C:\ansible_wu.txt
      ignore_errors: true
      register: update_result
    
    - name: set errors
      set_fact:
        check_updates: false
        update_list: "{{ update_list + [update_result.msg] }}"
      when: update_result.failed

    - debug: var=update_result

    - name: print titles of updates
      debug: msg=""{{ update_result | json_query(jmesquery) }}""
      vars:
        jmesquery: '*.*.title[]'
      when: check_updates

    - name: edit list for updates
      set_fact:
        update_list: "{{ update_result | json_query(jmesquery) }}"
      vars:
        jmesquery: '*.*.title[]'
      when: check_updates

    - name: set updates list for Windows
      set_fact:
        update_list: ['There is no package for update']
      when: check_updates and (update_list[0] is not defined or update_list is not defined)  

    - name: set reboot required
      set_fact:
        reboot_required: False
      when: (not update_result.failed) and (update_result.reboot_required)

    - name: set reboot required
      set_fact:
        reboot_required: True
      when: (not update_result.failed) and (update_result.reboot_required)

    - name: get date
      set_fact:
        date="{{ lookup('pipe','date +%Y-%m-%d-%H-%M-%S') }}"
  
    - name: Create HTMl report
      template:
        src: report-windows-updates.j2
        dest: /tmp/report-windows-updates-{{ date }}.html
      delegate_to: tower-01
      run_once: true