- name: Report updates for Windows and Linux WMs
  hosts: all
  gather_facts: true
  vars:
    update_list: []
    check_updates: true
  tasks:
    - name: update tasks for Red Hat
      block: 
      - name: install yum-utils
        yum:
          name: yum-utils
          state: latest
        become: true
        ignore_errors: true
        register: result_yum_utils
      
      - name: set errors for Red Hat
        set_fact:
          check_updates: false
          update_list: "{{ update_list + result_yum_utils.msg }}"
        when: result_yum_utils.failed
      when: ( ansible_distribution == "RedHat" or ansible_distribution == "Fedora"  or ansible_distribution == "OracleLinux" ) and check_updates

      - debug: var=result_yum_utils
      
      - name: list updates for Red Hat
        yum:
          list: updates
          use_backend: yum3
        register: update_result

      - name: set updates list for Red Hat
        set_fact:
          updatelist: "{{ update_result | json_query(jmesquery) }}"
        vars:
          jmesquery: 'results[*].envra'  
      when: ansible_distribution == "RedHat" or ansible_distribution == "Fedora"  or ansible_distribution == "OracleLinux"

    - name: update tasks for Debian
      block: 
      - name: list updates for Debian
        command: 'apt list --upgradeable'
        register: update_result
        
      - name: list updates for Debian
        set_fact:
          updatelist: "{{ update_result | json_query(jmesquery) }}"
        vars:
          jmesquery: 'stdout_lines'
      when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

    - name: get date
      set_fact:
        date="{{ lookup('pipe','date +%Y-%m-%d-%H-%M-%S') }}"

    - name: create HTML report
      template:
        src: report-linux-updates.j2
        dest: /tmp/report-linux-updates-{{ date }}.html
      delegate_to: tower-01
      run_once: true